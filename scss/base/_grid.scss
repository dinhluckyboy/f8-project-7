/* grid scss */

@use "sass:map";
@use "sass:math";

$grid-breakpoints: (
  xs: 0,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px,
  xxl: 1400px,
);

$container-max-widths: (
  sm: 540px,
  md: 720px,
  lg: 960px,
  xl: 1170px,
  xxl: 1320px,
);

$grid-column: 12;
$grid-gutter-width: 30px !default;

$gutters: (
  0: 0,
  1: 0.25,
  2: 0.5,
  3: 1,
  4: 1.5,
  5: 3,
);

%gutter-padding {
  padding-left: calc(var(--grid-gutter-x) * 0.5);
  padding-right: calc(var(--grid-gutter-x) * 0.5);
}

.container-fluid {
  --grid-gutter-x: #{$grid-gutter-width};
  --grid-gutter-y: 0;

  width: 100%;
  margin-left: auto;
  margin-right: auto;

  @extend %gutter-padding;
}

.container {
  @extend .container-fluid;
}

.row {
  display: flex;
  flex-wrap: wrap;
  margin-left: calc(var(--grid-gutter-x) * 0.5 * -1);
  margin-right: calc(var(--grid-gutter-x) * 0.5 * -1);
  margin-top: calc(var(--grid-gutter-y) * -1);

  > * {
    @extend %gutter-padding;
    margin-top: var(--grid-gutter-y);
  }
}

.col {
  flex-grow: 1;
  flex-shrink: 0;
}

@mixin make-media-query($dimension) {
  @if ($dimension == 0) {
    @content;
  } @else {
    @media (min-width: $dimension) {
      @content;
    }
  }
}

@each $breakpoint, $dimension in $grid-breakpoints {
  $max-width: map.get($container-max-widths, $breakpoint);
  $infix: if($breakpoint == "xs", "", "-#{$breakpoint}");

  @include make-media-query($dimension) {
    .container {
      max-width: $max-width;
    }

    /* row-cols-* */
    @for $i from 1 through $grid-column * 0.5 {
      .row-cols#{$infix}-#{$i} > * {
        width: math.div(100%, $i);
        flex-grow: 0;
        flex-shrink: 0;
      }
    }

    /* col-* */
    @for $i from 1 through $grid-column {
      .col#{$infix}-#{$i} {
        flex-grow: 0;
        flex-shrink: 0;
        width: math.div($i, $grid-column) * 100%;
      }
    }

    /* offset */
    @for $i from 0 to $grid-column {
      .offset#{$infix}-#{$i} {
        margin-left: math.div($i, $grid-column) * 100%;
      }
    }

    /* gutter */
    @each $i, $ratio in $gutters {
      .g#{$infix}-#{$i} {
        --grid-gutter-x: #{$grid-gutter-width * $ratio};
        --grid-gutter-y: #{$grid-gutter-width * $ratio};
      }

      .gx#{$infix}-#{$i} {
        --grid-gutter-x: #{$grid-gutter-width * $ratio};
      }

      .gy#{$infix}-#{$i} {
        --grid-gutter-y: #{$grid-gutter-width * $ratio};
      }
    }
  }
}
